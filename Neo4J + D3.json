{"paragraphs":[{"text":"%angular\n<body>\n<script type=\"text/javascript\">\nangular.injector(['ng']).invoke(['$q', '$timeout', function ($q, $timeout) {\n    var loadJS = function loadJSFn (url) {\n        console.log('Loading library url: \"%s\"', url);\n        var deferred = $q.defer();\n        $timeout(function () {\n            if (angular.element('script[src=\"' + url + '\"]').length) {\n                console.log('Script \"%s\" already present', url);\n                deferred.reject('Script already present');\n                return;\n            }\n            var sc = document.createElement('script');\n            sc.type = 'text/javascript';\n            sc.src = url;\n            sc.onload = deferred.resolve;\n            sc.onerror = deferred.reject;\n            document.getElementsByTagName('head')[0].appendChild(sc);\n        }, 0);\n        return deferred.promise;\n    };\n   \n    \n    angular.extend(angular, { loadJS : loadJS, randomColor : randomColor });\n}]);\n\nangular.loadJS('http://d3js.org/d3.v3.min.js')\n    .then(function () {\n        //initSigma();\n        return angular.loadJS('http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js');\n    });\n</script>\n","dateUpdated":"Nov 16, 2016 10:50:00 AM","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","editorHide":false,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478542502186_-1676209022","id":"20161107-181502_1194956649","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<body>\n<script type=\"text/javascript\">\nangular.injector(['ng']).invoke(['$q', '$timeout', function ($q, $timeout) {\n    var loadJS = function loadJSFn (url) {\n        console.log('Loading library url: \"%s\"', url);\n        var deferred = $q.defer();\n        $timeout(function () {\n            if (angular.element('script[src=\"' + url + '\"]').length) {\n                console.log('Script \"%s\" already present', url);\n                deferred.reject('Script already present');\n                return;\n            }\n            var sc = document.createElement('script');\n            sc.type = 'text/javascript';\n            sc.src = url;\n            sc.onload = deferred.resolve;\n            sc.onerror = deferred.reject;\n            document.getElementsByTagName('head')[0].appendChild(sc);\n        }, 0);\n        return deferred.promise;\n    };\n   \n    \n    angular.extend(angular, { loadJS : loadJS, randomColor : randomColor });\n}]);\n\nangular.loadJS('http://d3js.org/d3.v3.min.js')\n    .then(function () {\n        //initSigma();\n        return angular.loadJS('http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js');\n    });\n</script>"},"dateCreated":"Nov 7, 2016 6:15:02 PM","dateStarted":"Nov 16, 2016 10:45:52 AM","dateFinished":"Nov 16, 2016 10:45:52 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:44"},{"text":"%angular\n\n<form>\n    <div class=\"form-group\">\n        <p>\n<div id=\"messageArea\"></div>\n<p>\n<table>\n  <tr>\n    <td>\n      <label>Category</label>\n    </td>\n    <td>\n        <select name=\"category\" id=\"idCategory\" onchange=\"getSubCat()\">\n           <option value=\"Select\">Select</option>\n           <option value=\"Adventure\">Adventure</option>\n           <option value=\"Sight Seeing\">SightSeeing</option>\n           <option value=\"Luxury\">Luxury</option>\n           <option value=\"Outdoor\">Outdoor</option>\n           <option value=\"Events\">Events</option>\n           <option value=\"Workshops\">Workshops</option>\n        </select>\n    </td>\n    <td>\n      <label>Sub-Category</label>\n    </td>\n    <td>\n        <select name=\"subcat\" id=\"idSubCategory\" multiple>\n        </select>\n    </td>\n  </tr>\n  <!--<tr>\n    <td><input name=\"cypher\" id=\"cypher-in\" value=\"\" /></td>\n    <td><button name=\"post cypher\" onclick=\"post_cypherquery();\">execute</button></td>\n  </tr>\n  -->\n</table>\n<p>\n<div id=\"output\">\n</div>\n<p>\n</form>\n<div id=\"output\" style=\"height: 800px; width: 100%\"></div>\n<style>\n\n.node {\n  stroke: #fff;\n  stroke-width: 1.5px;\n}\n\n.link-line {\n  stroke: #999;\n  stroke-opacity: .6;\n}\n\n</style>\n<script type=\"text/javascript\">\nfunction getSubCat(){\n//alert(\"val\"+$(\"#idCategory\").val())\nif($(\"#idCategory\").val()!=\"Select\"){\n//call neo4j with Cypher Query\n   post_cypherquery($(\"#idCategory\").val(),\"cat\")\n}\nelse {\n alert(\"Please choose a category to explore further\")\n }\n}\n\n\n\nfunction idIndex(a,id) {\n  for (var i=0;i<a.length;i++) {\n    if (a[i].id == id) return i;}\n  return null;\n}\n\n\nfunction res_f(res,type,selectedValue){\nvar nodes=[], links=[];\n\nres.results[0].data.forEach(function (row) {\n   row.graph.nodes.forEach(function (n) {\n     if (idIndex(nodes,n.id) == null)\n       nodes.push({id:n.id,label:n.labels[0],title:n.properties.name});\n   });\n   links = links.concat( row.graph.relationships.map(function(r) {\n     return {source:idIndex(nodes,r.startNode),target:idIndex(nodes,r.endNode),type:r.type};\n   }));\n});\nvar viz = {nodes:nodes, links:links};\n\nd3_rendering(viz,type,selectedValue)\n}\n\nfunction d3_rendering(graph,type,selectedValue){\n//graph = {\"nodes\":[{\"name\":\"Peter\",\"label\":\"Person\",\"id\":1},{\"name\":\"Michael\",\"label\":\"Person\",\"id\":2},{\"name\":\"Neo4j\",\"label\":\"Database\",\"id\n//\":3}],\"links\":[{\"source\":0, \"target\":1, \"type\":\"KNOWS\", \"since\":2010},{\"source\":0, \"target\":2, \"type\":\"FOUNDED\"},{\"source\":1, \"target\":2, \"typ\n//e\":\"WORKS_ON\"}]};\n\n\nd3.select(\"svg\").remove();\n\n\n\n\n\nvar width = 960,\n    height = 700;\n\n\nvar color = d3.scale.category20();\n\nvar force = d3.layout.force()\n    .gravity(.05)\n    .charge(-400)\n    .linkDistance(150)\n    .size([width, height]);\n\n\n\n\nvar svg = d3.select(\"#output\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n\n    force.nodes(graph.nodes).links(graph.links).start();\n\n         // render relationships as lines\n    var link = svg.selectAll(\".link\")\n              .data(graph.links).enter()\n              .append(\"g\")\n              .attr(\"class\",\"link\")\n              .append(\"line\")\n              .attr(\"class\", \"link-line\");\n\n    var linkText = svg.selectAll(\".link\")\n        .append(\"text\")\n        .attr(\"class\", \"link-label\")\n        .attr(\"font-family\", \"Arial, Helvetica, sans-serif\")\n        .attr(\"fill\", \"Black\")\n        .style(\"font\", \"normal 6px Arial\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"middle\")\n        .text(function(d) {\n            return d.type;\n        });\n\n        // create the g elements\n        var nodes = svg.selectAll(\".node\")\n              .data(graph.nodes).enter()\n               // Add one g element for each data node here.\n              .append(\"g\")\n              // Position the g element like the circle element used to be.\n\n\n\n        // render nodes as circles, css-class from label\n      nodes.append(\"circle\")\n        .attr(\"class\", function (d) { return \"node \"+d.label })\n        .attr(\"r\", 25)\n        //.style(\"fill\", function(d) { return \"yellow\"; })\n        .style(\"fill\",function (d){return color(d.title);})\n        .attr(\"cx\",\"0\")\n        .attr(\"cy\",\"0\")\n        .call(force.drag);\n\n    // add text\n        nodes.append(\"text\")\n      .attr(\"text-anchor\",\"middle\")\n      .attr(\"font-size\",\"10px\")\n      .text(function (d) { return d.title; })\n\n\n    force.on(\"tick\", function() {\n          link.attr(\"x1\", function(d) { return d.source.x; })\n                  .attr(\"y1\", function(d) { return d.source.y; })\n                  .attr(\"x2\", function(d) { return d.target.x; })\n                  .attr(\"y2\", function(d) { return d.target.y; });\n\n\n    linkText\n            .attr(\"x\", function(d) {\n                return ((d.source.x + d.target.x)/2);\n            })\n            .attr(\"y\", function(d) {\n                return ((d.source.y + d.target.y)/2);\n            });\n\n\n    nodes.attr(\"transform\", function(d){return \"translate(\"+d.x+\",\"+d.y+\")\"})\n\n      });\n // });\nparse_nodes(graph.nodes);\nif(type==\"cat\"){\n  populate_subcat(graph.nodes,selectedValue);\n}\n}\n\nfunction post_cypherquery(value,type) {\n            cypher=\"\";\n            \n            if(type==\"cat\"){\n                   cypher = \"MATCH p=(a)<-[r:IS_A]-(b) where a.name = '\"+value+\"' RETURN p\"\n            }\n            else if(type==\"init\"){\n                   cypher = \"MATCH p=()-[r:IS_A]->() RETURN p LIMIT 25\"\n            }\n\n            $('#messageArea').html('<h3>(loading)</h3>');\n\n            $.ajax({\n                url: \"http://sandbox.hortonworks.com:8157/db/data/transaction/commit\",\n                type: 'POST',\n                data: JSON.stringify({ \"statements\": [{ \"statement\": cypher,\"resultDataContents\":[\"graph\",\"row\"] }] }),\n                contentType: 'application/json',\n                accept: 'application/json; charset=UTF-8'\n            }).done(function (data) {\n                res_f(data,type,value)\n                //d3_rendering(data)\n            })\n            .fail(function (jqXHR, textStatus, errorThrown) {\n                $('#messageArea').html('<h3>' + textStatus + ' : ' + errorThrown + '</h3>')\n            });\n  };\n\n\nfunction parse_nodes(nodes){\n\nvar subcat;\nnodes.forEach(function(node){\n\n\n});\n}\n\nfunction populate_subcat(nodes,selectedValue){\n   \n   $(\"#idSubCategory\").empty()\n   var options = $(\"#idSubCategory\")\n   var graphNodes_1 = ''\n   $.each(nodes, function() {\n       options.append($(\"<option />\").val(this.title).text(this.title));\n       if(this.title!=selectedValue){\n         graphNodes_1+=this.title+','\n       }\n   });\n   $(\"#idSubCategory option[value='\"+selectedValue+\"']\").remove();\n   \n}\n\n\nfunction get_nodes() {\n\n            $('#messageArea').html('<h3>(loading)</h3>');\n\n            $.ajax({\n                url: \"http://sandbox.hortonworks.com:8157/db/data/node\",\n                type: 'POST',\n                data: JSON.stringify({ \"statements\": [{ \"statement\": $('#cypher-in').val() }] }),\n                contentType: 'application/json',\n                accept: 'application/json; charset=UTF-8'\n            }).done(function (data) {\n                parse_nodes(data)\n            })\n            .fail(function (jqXHR, textStatus, errorThrown) {\n                $('#messageArea').html('<h3>' + textStatus + ' : ' + errorThrown + '</h3>')\n            });\n\n}\n\n$(document).ready(function () {\n  \n  post_cypherquery(\"\",'init');\n});\n\n</script>\n</body>","dateUpdated":"Nov 16, 2016 10:55:40 AM","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","editorHide":false,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478542502201_-1671207287","id":"20161107-181502_165319156","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<form>\n    <div class=\"form-group\">\n        <p>\n<div id=\"messageArea\"></div>\n<p>\n<table>\n  <tr>\n    <td>\n      <label>Category</label>\n    </td>\n    <td>\n        <select name=\"category\" id=\"idCategory\" onchange=\"getSubCat()\">\n           <option value=\"Select\">Select</option>\n           <option value=\"Adventure\">Adventure</option>\n           <option value=\"Sight Seeing\">SightSeeing</option>\n           <option value=\"Luxury\">Luxury</option>\n           <option value=\"Outdoor\">Outdoor</option>\n           <option value=\"Events\">Events</option>\n           <option value=\"Workshops\">Workshops</option>\n        </select>\n    </td>\n    <td>\n      <label>Sub-Category</label>\n    </td>\n    <td>\n        <select name=\"subcat\" id=\"idSubCategory\" multiple>\n        </select>\n    </td>\n  </tr>\n  <!--<tr>\n    <td><input name=\"cypher\" id=\"cypher-in\" value=\"\" /></td>\n    <td><button name=\"post cypher\" onclick=\"post_cypherquery();\">execute</button></td>\n  </tr>\n  -->\n</table>\n<p>\n<div id=\"output\">\n</div>\n<p>\n</form>\n<div id=\"output\" style=\"height: 800px; width: 100%\"></div>\n<style>\n\n.node {\n  stroke: #fff;\n  stroke-width: 1.5px;\n}\n\n.link-line {\n  stroke: #999;\n  stroke-opacity: .6;\n}\n\n</style>\n<script type=\"text/javascript\">\nfunction getSubCat(){\n//alert(\"val\"+$(\"#idCategory\").val())\nif($(\"#idCategory\").val()!=\"Select\"){\n//call neo4j with Cypher Query\n   post_cypherquery($(\"#idCategory\").val(),\"cat\")\n}\nelse {\n alert(\"Please choose a category to explore further\")\n }\n}\n\n\n\nfunction idIndex(a,id) {\n  for (var i=0;i<a.length;i++) {\n    if (a[i].id == id) return i;}\n  return null;\n}\n//var nodes=[], links=[];\n//var res,viz,graph;\n\nfunction res_f(res,type,selectedValue){\nvar nodes=[], links=[];\n//alert('in res_f')\nres.results[0].data.forEach(function (row) {\n   row.graph.nodes.forEach(function (n) {\n     if (idIndex(nodes,n.id) == null)\n       nodes.push({id:n.id,label:n.labels[0],title:n.properties.name});\n   });\n   links = links.concat( row.graph.relationships.map(function(r) {\n     return {source:idIndex(nodes,r.startNode),target:idIndex(nodes,r.endNode),type:r.type};\n   }));\n});\nvar viz = {nodes:nodes, links:links};\n//alert(viz.links)\nd3_rendering(viz,type,selectedValue)\n}\n\nfunction d3_rendering(graph,type,selectedValue){\n//graph = {\"nodes\":[{\"name\":\"Peter\",\"label\":\"Person\",\"id\":1},{\"name\":\"Michael\",\"label\":\"Person\",\"id\":2},{\"name\":\"Neo4j\",\"label\":\"Database\",\"id\n//\":3}],\"links\":[{\"source\":0, \"target\":1, \"type\":\"KNOWS\", \"since\":2010},{\"source\":0, \"target\":2, \"type\":\"FOUNDED\"},{\"source\":1, \"target\":2, \"typ\n//e\":\"WORKS_ON\"}]};\n\n//alert('in d3_rendering'+graph.nodes)\n//alert('in d3_rendering links'+graph.links)\n// load graph (nodes,links) json from /graph endpoint\n//d3.json(\"/graph\", function(error, graph) {\n//if (error) return;\n\n\n//d3.select(\"svg\").selectAll(\"*\").remove();\nd3.select(\"svg\").remove();\n\n\n//alert(\"removed\");\n\n\nvar width = 960,\n    height = 700;\n\n\nvar color = d3.scale.category20();\n\nvar force = d3.layout.force()\n    .gravity(.05)\n    .charge(-400)\n    .linkDistance(150)\n    .size([width, height]);\n\n\n//var svg = d3.select(\"#output\").append(\"svg\")\n  //  .attr(\"width\", \"100%\")\n  //  .attr(\"height\", \"100%\")\n  //  .attr(\"pointer-events\", \"all\");\n\n\nvar svg = d3.select(\"#output\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n\n    force.nodes(graph.nodes).links(graph.links).start();\n\n         // render relationships as lines\n    var link = svg.selectAll(\".link\")\n              .data(graph.links).enter()\n              .append(\"g\")\n              .attr(\"class\",\"link\")\n              .append(\"line\")\n              .attr(\"class\", \"link-line\");\n\n    var linkText = svg.selectAll(\".link\")\n        .append(\"text\")\n        .attr(\"class\", \"link-label\")\n        .attr(\"font-family\", \"Arial, Helvetica, sans-serif\")\n        .attr(\"fill\", \"Black\")\n        .style(\"font\", \"normal 6px Arial\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"middle\")\n        .text(function(d) {\n            return d.type;\n        });\n\n        // create the g elements\n        var nodes = svg.selectAll(\".node\")\n              .data(graph.nodes).enter()\n               // Add one g element for each data node here.\n              .append(\"g\")\n              // Position the g element like the circle element used to be.\n\n\n\n        // render nodes as circles, css-class from label\n      nodes.append(\"circle\")\n        .attr(\"class\", function (d) { return \"node \"+d.label })\n        .attr(\"r\", 25)\n        //.style(\"fill\", function(d) { return \"yellow\"; })\n        .style(\"fill\",function (d){return color(d.title);})\n        .attr(\"cx\",\"0\")\n        .attr(\"cy\",\"0\")\n        .call(force.drag);\n\n    // add text\n        nodes.append(\"text\")\n      .attr(\"text-anchor\",\"middle\")\n      .attr(\"font-size\",\"10px\")\n      .text(function (d) { return d.title; })\n\n\n    force.on(\"tick\", function() {\n          link.attr(\"x1\", function(d) { return d.source.x; })\n                  .attr(\"y1\", function(d) { return d.source.y; })\n                  .attr(\"x2\", function(d) { return d.target.x; })\n                  .attr(\"y2\", function(d) { return d.target.y; });\n\n\n    linkText\n            .attr(\"x\", function(d) {\n                return ((d.source.x + d.target.x)/2);\n            })\n            .attr(\"y\", function(d) {\n                return ((d.source.y + d.target.y)/2);\n            });\n\n\n    nodes.attr(\"transform\", function(d){return \"translate(\"+d.x+\",\"+d.y+\")\"})\n\n      });\n // });\nparse_nodes(graph.nodes);\nif(type==\"cat\"){\n  populate_subcat(graph.nodes,selectedValue);\n}\n}\n\nfunction post_cypherquery(value,type) {\n            cypher=\"\";\n            //alert('posting query'+ value)\n            if(type==\"cat\"){\n                   cypher = \"MATCH p=(a)<-[r:IS_A]-(b) where a.name = '\"+value+\"' RETURN p\"\n            }\n            else if(type==\"init\"){\n                   cypher = \"MATCH p=()-[r:IS_A]->() RETURN p LIMIT 25\"\n            }\n\n            $('#messageArea').html('<h3>(loading)</h3>');\n\n            $.ajax({\n                url: \"http://sandbox.hortonworks.com:8157/db/data/transaction/commit\",\n                type: 'POST',\n                data: JSON.stringify({ \"statements\": [{ \"statement\": cypher,\"resultDataContents\":[\"graph\",\"row\"] }] }),\n                contentType: 'application/json',\n                accept: 'application/json; charset=UTF-8'\n            }).done(function (data) {\n                res_f(data,type,value)\n                //d3_rendering(data)\n            })\n            .fail(function (jqXHR, textStatus, errorThrown) {\n                $('#messageArea').html('<h3>' + textStatus + ' : ' + errorThrown + '</h3>')\n            });\n  };\n\n\nfunction parse_nodes(nodes){\n//alert(\"nodes\"+nodes)\nvar subcat;\nnodes.forEach(function(node){\n//alert(node.label)\n\n});\n}\n\nfunction populate_subcat(nodes,selectedValue){\n   //alert(\"nodes\"+nodes)\n   $(\"#idSubCategory\").empty()\n   var options = $(\"#idSubCategory\")\n   var graphNodes_1 = ''\n   $.each(nodes, function() {\n       options.append($(\"<option />\").val(this.title).text(this.title));\n       if(this.title!=selectedValue){\n         graphNodes_1+=this.title+','\n       }\n   });\n   $(\"#idSubCategory option[value='\"+selectedValue+\"']\").remove();\n   //alert(\"graphNodes=\"+graphNodes_1)\n}\n\n\nfunction get_nodes() {\n//alert('get nodes'+ $('#cypher-in').val())\n            $('#messageArea').html('<h3>(loading)</h3>');\n\n            $.ajax({\n                url: \"http://sandbox.hortonworks.com:8157/db/data/node\",\n                type: 'POST',\n                data: JSON.stringify({ \"statements\": [{ \"statement\": $('#cypher-in').val() }] }),\n                contentType: 'application/json',\n                accept: 'application/json; charset=UTF-8'\n            }).done(function (data) {\n                parse_nodes(data)\n            })\n            .fail(function (jqXHR, textStatus, errorThrown) {\n                $('#messageArea').html('<h3>' + textStatus + ' : ' + errorThrown + '</h3>')\n            });\n\n}\n\n$(document).ready(function () {\n  //alert('on load function');\n  post_cypherquery(\"\",'init');\n});\n\n</script>\n</body>"},"dateCreated":"Nov 7, 2016 6:15:02 PM","dateStarted":"Nov 16, 2016 10:45:52 AM","dateFinished":"Nov 16, 2016 10:45:52 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45","focus":true},{"dateUpdated":"Nov 16, 2016 10:45:52 AM","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1478542502202_-1670053040","id":"20161107-181502_1822699321","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"Nov 7, 2016 6:15:02 PM","dateStarted":"Nov 16, 2016 10:45:52 AM","dateFinished":"Nov 16, 2016 10:45:52 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:46"}],"name":"Neo4j + d3","id":"2C2DG6592","angularObjects":{"2BTJ95V2F":[],"2BVEPNQSE":[],"2BTNV4BWR":[],"2BTG17B6C":[],"2BVRECQPN":[],"2BTZM4VY2":[],"2BTRZYBTN":[],"2BTJR7JY4":[],"2BW8NJA3U":[],"2BW38CNAD":[],"2BWVP1X91":[],"2BWXNTESJ":[],"2BVECK5EM":[]},"config":{"looknfeel":"default"},"info":{}}